.blank-placeholder {
  display: none;
}

.no-results {
  background-color: inherit;
}

:host ::ng-deep {
  mat-form-field {
    width: 100%;
    max-width: 100%;
    letter-spacing: inherit;
    margin-left: 0px;
    min-width: 80px;

    .mdc-text-field {
      padding-left: 12px;
    }

    &.inited:not(.mat-form-field-disabled) {
      cursor: pointer;
    }

    &.multiple {
      .mat-mdc-form-field-infix {
        flex-wrap: wrap;
      }
    }
    
    &.mat-form-field-disabled {
      fs-chip {
        opacity: .7;
      }
    }

    &:not(.inited) {
      fs-clear {
        display: none;
      }
          
      &.mat-form-field-disabled {
        .mat-mdc-notch-piece {
          border-color: transparent;
        }
      }
    }

    // SP-T4357 This style hide selected option if autocomplete is focused
    // In this case width of selectors jumps and it is impossible to click on remove button
    // &:not(.multiple).mat-focused {
    //   fs-chip {
    //     display: none;
    //   }
    // }

    &.has-value:not(.mat-focused) {
      input {
        width: 0 !important;
        height: 0 !important;
      }
    }

    &:not(.has-value) {
      input {
        width: 100% !important;
      }

      &:not(.mat-focused):not(.float-label-always) {
        input {
          opacity: 0;
        }

        .mdc-notched-outline__notch {
          border-top-width: 1px;
          border-top-style: solid;
          width: auto !important;

          label {
            transform: none !important;
            top: 0 !important;
            height: 100%;
            display: flex;
            align-items: center;
          }
        }
      }
    }

    &:not(.inited):not(:hover) {
      .mat-form-field-underline {
        visibility: hidden;
      }

      .mat-mdc-notch-piece {
        border-color: transparent;
      }

      fs-chip {
        cursor: pointer;
      }
    }

    .mat-mdc-form-field-infix {
      width: unset;
      padding: 0;
      display: flex;
      align-items: center;
      flex-wrap: wrap;

      input {
        cursor: pointer;
        border: none;
        outline: none;
        width: auto;
        min-width: 50px;
        flex: 1 1 0%;
        width: 5px;
      }
    }

    .chips-container {
      display: flex;
      gap: 5px;
      align-items: center;
      flex-wrap: wrap;
      min-width: 0;
      flex: 1;
    }
  }

  fs-chips {
    display: inline-flex;
  }

  .item-container {
    min-width: 0;
    display: flex;
    gap: 5px;
    min-width: 0;
  }
}

.fs-autocomplete-chip {
  max-width: 100%;
}

::ng-deep {
  .fs-autocomplete-chip {
    .fs-item-content {
      flex: 1;
    }

  }

  .fs-autocomplete-chips-panel {
    padding: 0 !important;
    min-width: 200px !important;

    &.fetching {
      .custom-results,
      .option:not(.static-option) {
        opacity: .5;
      }
    }

    &:not(:hover) {
      .mat-active .option-chip {
        background-color: rgb(42 42 42 / 10%);
      }
    }

    &:hover .option {
      background-color: transparent !important;
    }

    .static-templates {
      position: sticky;
      bottom: 0;
      width: 100%;
      background: #fff;

      mat-option:first-child {
        border-top: 1px solid #e0e0e0;
      }
    }

    .invalid-message .option-text {
      line-height: normal;
      flex-direction: column;
      align-items: start;
      font-size: 80%;
    }

    .option {
      line-height: normal;
      padding: 0;

      .mat-icon {
        margin-right: 0;
      }

      .item-container,
      .mdc-list-item__primary-text {
        min-width: 0;
      }

      &.option-text {
        .check {
          margin-left: 5px;
          font-size: 85%;
        }

        &.valid .check {
          color: rgb(15, 170, 15);
        }

        &:not(.valid) .check {
          color: rgb(234, 27, 9);
        }
      }

      &:hover {
        background-color: #F5F5F5 !important;
      }

      &.multiple .option-chip {
        padding-left: 8px;
      }

      .option-chip {
        padding: 0 16px;
        align-items: center;
        display: flex;
      }
    }
  }

}
